- name: Install dependencies
  apt:
    package:
        - python3-mysqldb
        - libmecab2
    state: present
    force: yes
    update_cache: yes


- name: Download mysql common pack
  get_url:
    url: https://dev.mysql.com/get/Downloads/MySQL-Cluster-8.0/mysql-common_8.0.30-1ubuntu20.04_amd64.deb
    dest: /home/ubuntu/

- name: install mysql common pack
  shell: dpkg -i mysql-common_8.0.30-1ubuntu20.04_amd64.deb

- name: Download mysql cluster community client plugin pack
  get_url:
    url: https://dev.mysql.com/get/Downloads/MySQL-Cluster-8.0/mysql-cluster-community-client-plugins_8.0.30-1ubuntu20.04_amd64.deb
    dest: /home/ubuntu/

- name: install cluster community clinet plugin pack
  shell: dpkg -i mysql-cluster-community-client-plugins_8.0.30-1ubuntu20.04_amd64.deb

- name: Download mysql cluster community client core pack
  get_url:
    url: https://dev.mysql.com/get/Downloads/MySQL-Cluster-8.0/mysql-cluster-community-client-core_8.0.30-1ubuntu20.04_amd64.deb
    dest: /home/ubuntu/

- name: install cluster community clinet core pack
  shell: dpkg -i mysql-cluster-community-client-core_8.0.30-1ubuntu20.04_amd64.deb

- name: Download mysql cluster community client pack
  get_url:
    url: https://dev.mysql.com/get/Downloads/MySQL-Cluster-8.0/mysql-cluster-community-client_8.0.30-1ubuntu20.04_amd64.deb
    dest: /home/ubuntu/

- name: install cluster community clinet pack
  shell: dpkg -i mysql-cluster-community-client_8.0.30-1ubuntu20.04_amd64.deb

- name: Download mysql client pack
  get_url:
    url: https://dev.mysql.com/get/Downloads/MySQL-Cluster-8.0/mysql-client_8.0.30-1ubuntu20.04_amd64.deb
    dest: /home/ubuntu/

- name: install mysql  clinet pack
  shell: dpkg -i mysql-client_8.0.30-1ubuntu20.04_amd64.deb


- name: Download mysql cluster community server core pack
  get_url:
    url: https://dev.mysql.com/get/Downloads/MySQL-Cluster-8.0/mysql-cluster-community-server-core_8.0.30-1ubuntu20.04_amd64.deb
    dest: /home/ubuntu/

- name: install cluster community server core pack
  shell: dpkg -i mysql-cluster-community-server-core_8.0.30-1ubuntu20.04_amd64.deb

- name: Download mysql cluster community server pack
  get_url:
    url: https://dev.mysql.com/get/Downloads/MySQL-Cluster-8.0/mysql-cluster-community-server_8.0.30-1ubuntu20.04_amd64.deb
    dest: /home/ubuntu/

# Инсталлятор mysql-cluster-community-server  переходит в интерактивный режим и не выполняеся в фоне.
# Следующие 3 таски делают как-бы автоответы на вопросы и инсталлятор потом выполнится без вопросов.

- name: Make answer for root password for installing mysql-community-server
  debconf:
    name: mysql-cluster-community-server
    question: mysql-cluster-community-server/root-pass
    value: '123456'
    vtype: password

- name: Make answer for retype root password for installing mysql-community-server
  debconf:
    name: mysql-cluster-community-server
    question: mysql-cluster-community-server/re-root-pass
    value: '123456'
    vtype: password

- name: Make answer for Authentication Methodfor installing mysql-community-server
  debconf:
    name: mysql-cluster-community-server
    question: mysql-server/default-auth-override
    value: 'Use Legacy Authentication Method (Retain MySQL 5.x Compatibility)'
    vtype: select


- name: install cluster community server package
  shell: dpkg -i mysql-cluster-community-server_8.0.30-1ubuntu20.04_amd64.deb

- name: Create mysql group
  group: name=mysql system=yes

- name: Create myslq user
  user: name=mysql system=yes createhome=no group=mysql

- name: Install config
  template: src=my.cnf dest=/etc/mysql/my.cnf

- name: Activate init script and start mysql server
  service: name=mysql.service enabled=yes state=restarted

- name: Test of Cluster
  shell: /usr/bin/ndb_mgm -e SHOW
  register: command_output

- name: Print Status of Cluster
  debug:
    msg: "{{ command_output.stdout_lines }}"

- name: Test of Cluster
  shell: mysql -u root -p123456 -e 'SHOW ENGINE NDB STATUS \G'
  register: command_output

- name: Print Status of NDB
  debug:
    msg: "{{ command_output.stdout_lines }}"

- name: Create a new database called wordpress
  mysql_db:
    login_user: root
    login_password: "123456"
    name: wordpress
    state: present

- name: Configure new MySQL user wordpress for Wordpress connect to BD form any host
  mysql_user:
    login_user: root
    login_password: "123456"
    name: wordpress
    password: wordpress
    host: '%'
    priv: 'wordpress.*:ALL'

